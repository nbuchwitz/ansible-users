- name: Pull SSH public keys from GIT
  ansible.builtin.git:
    repo: "{{ sshkey_repo_git }}"
    dest: "{{ sshkey_repo }}"
    clone: true
    update: true
  delegate_to: localhost
  become: false
  run_once: true
  when: sshkey_repo_git is defined
  tags:
    - users
    - sshkeys

- name: Filter absent users
  ansible.builtin.set_fact:
    users: "{{ users | selectattr('state', 'undefined') | list + users | selectattr('state', 'defined') | selectattr('state', 'equalto', 'present') | list }}"
  tags:
    - users
    - sshkeys

- name: "Authorized keys for users"
  ansible.posix.authorized_key:
    user: "{{ item.name }}"
    key: "{% for key in query('fileglob', '{{ sshkey_repo }}/{{ item.name }}/*.pub') %}{{ lookup('file', key) ~ '\n'}}{% endfor %}"
    exclusive: "{{ sshkey_exclusive }}" # TODO: per user basis?
  with_items: "{{ users }}"
  tags:
    - users
    - sshkeys

- name: "Authorized keys for root (1/3): load extra keys as initial value"
  ansible.builtin.set_fact:
    root_ssh_keys: "{% for key in root_ssh_keys | default([]) %}{{ key }}\n{% endfor %}"

- name: "Authorized keys for root (2/3): build list of allowed keys"
  ansible.builtin.set_fact:
    root_ssh_keys: >-
      {{ root_ssh_keys | default('') }}
      {% for key in query('fileglob', '{{ sshkey_repo }}/{{ item.name }}/*.pub') %}
      {{ lookup('file', key) ~ \"\n\"}}
      {% endfor %}
  with_items: "{{ users | selectattr('root_ssh_keys', 'defined') | selectattr('root_ssh_keys', 'equalto', True) | list }}"
  tags:
    - users
    - sshkeys

- name: "Authorized keys for root (3/3): write authorized_keys file"
  ansible.posix.authorized_key:
    user: "root"
    key: "{{ root_ssh_keys }}"
    exclusive: "{{ sshkey_exclusive }}" # TODO: per user basis?
  when: root_ssh_keys is defined and root_ssh_keys != ""
  tags:
    - users
    - sshkeys
